x-sr.ht-service: &srht-service
  configs:
    - source: sr.ht-config
      target: /etc/sr.ht/config.ini
    - source: sr.ht-pgp-pubkey
      target: /etc/sr.ht/pgp/pubkey.asc
    - source: sr.ht-pgp-privkey
      target: /etc/sr.ht/pgp/privkey.asc

configs:
  sr.ht-config:
    file: config.ini
  sr.ht-pgp-pubkey:
    file: pgp-pubkey.asc
  sr.ht-pgp-privkey:
    file: pgp-privkey.asc

volumes:
  postgres-data:

services:
  redis:
    image: "redis:alpine"
  postgres:
    image: "postgres:alpine"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./init-postgres.sh:/docker-entrypoint-initdb.d/init.sh"
      - "./meta.sr.ht/schema.sql:/data/meta.sr.ht.sql"
  meta.sr.ht-api:
    <<: *srht-service
    build:
      target: meta.sr.ht
      network: host # TODO: drop this workaround
    develop:
      watch:
        - path: meta.sr.ht/api
          action: rebuild
    depends_on:
      - redis
      - postgres
    ports:
      - "5100:5100"
    command: /src/meta.sr.ht/api/api
  meta.sr.ht:
    <<: *srht-service
    build:
      target: meta.sr.ht
      network: host # TODO: drop this workaround
    develop:
      watch:
        - path: meta.sr.ht/metasrht
          action: sync
          target: /src/meta.sr.ht/metasrht
    depends_on:
      - redis
      - postgres
      - meta.sr.ht-api
    ports:
      - "5000:5000"
    command: flask --app metasrht.app:app --debug run --host=0.0.0.0
